<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VPC on p0n2&#39;s Blog</title>
    <link>/tags/vpc/</link>
    <description>Recent content in VPC on p0n2&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 07 Jul 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/vpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS NatGateway Cost Optimization筆記</title>
      <link>/post/2020_07_nat_gw_cost_optimized/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0800</pubDate>
      
      <guid>/post/2020_07_nat_gw_cost_optimized/</guid>
      <description>很多人初學AWS應該都會認識Nat Gateway這個服務，並且部署在Public Subnet裡提供給Private Subnet中的ＶＭ對外的存取。 不過其實你的application對外有大量對於S3或是dynamoDB大量的存取，可以搭配Pricing文件然後再搭配你的Billing，就會發現這是一筆成本。尤其是早起base在ec2的老服務容易遇到這種狀況(淚)
不過，這幾年在AWS架構上逐漸推廣VPC Endpoint的方式來提供給內部服務存取S3/DynamoDB。
如此一來便不用特別配製Nat Gateway也可以省下一筆費用。可以參考官方的說明
此外，利用VPC Endpoint後，我們也可以在Security上透過policy來更安全的存取相關的資源，比如我們可以限制S3 Bucket只能透過特定的Endpoint來存取</description>
    </item>
    
    <item>
      <title>AWS透過Bastion Server安全的ssh連線到VPC/EC2</title>
      <link>/post/2019_12_secure_connect_to_vpc_with_bastion/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>/post/2019_12_secure_connect_to_vpc_with_bastion/</guid>
      <description>0. Prerequisite 1. 建立SSH Tunnel 2. 設定SOCK Proxy 3. 測試連線  在AWS環境中通常會用一台Bastion Server(俗稱跳板機)來縮限從外部Internet來的存取，雖然安全，但也讓Developer常常面臨到debug的難題，例如要觀看private subnet內的web顯示，因此來筆記一下解法。</description>
    </item>
    
    <item>
      <title>利用AWS Fargate 5分鐘部署你的Gin/Flask API Cluster</title>
      <link>/post/2019_12_5min_api_cluster_with_fargate/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>/post/2019_12_5min_api_cluster_with_fargate/</guid>
      <description>0. Prerequisite 1. 部署VPC環境 2. 部署Fargate Cluster 3. 測試你的API Cluster 4.</description>
    </item>
    
  </channel>
</rss>